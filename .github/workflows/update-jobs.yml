name: Update New Grad Jobs

on:
  # Run every 5 minutes
  schedule:
    - cron: '*/5 * * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run on push to main branch for testing
  push:
    branches: [ main ]

jobs:
  update-jobs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full history for proper rebasing
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run job scraper
      run: |
        cd scripts
        python update_jobs.py
        
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config --local user.email "riteshrana36@gmail.com"
        git config --local user.name "ambicuity"
        git add README.md
        git commit -m "ðŸ¤– Update job listings - $(date -u '+%Y-%m-%d %H:%M UTC')"
        
        # Pull latest changes and push with retry logic
        max_retries=3
        retry_count=0
        
        while [ $retry_count -lt $max_retries ]; do
          # Pull latest changes first
          if git pull --rebase origin main; then
            # Try to push
            if git push origin main; then
              echo "Successfully pushed changes"
              break
            else
              echo "Push failed, retrying..."
            fi
          else
            echo "Pull/rebase failed, retrying..."
          fi
          
          retry_count=$((retry_count + 1))
          echo "Retry attempt $retry_count of $max_retries"
          
          if [ $retry_count -eq $max_retries ]; then
            echo "Failed to push after $max_retries attempts"
            exit 1
          fi
          
          # Wait a bit before retrying to avoid rapid consecutive failures
          sleep 5
        done
        
    - name: No changes
      if: steps.changes.outputs.changed == 'false'  
      run: echo "No new jobs found, README unchanged"
